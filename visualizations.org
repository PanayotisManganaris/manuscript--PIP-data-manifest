#+TITLE: Visualizing Perovskite Dataset
#+AUTHOR: Panayotis Manganaris
#+EMAIL: pmangana@purdue.edu
#+PROPERTY: header-args :session aikit :kernel aikit :async yes :pandoc org
* dependencies
clone the following repositories into your home "src" directory to use
this notebook

https://github.com/PanayotisManganaris/cmcl
https://github.com/PanayotisManganaris/yogi
https://github.com/PanayotisManganaris/spyglass

if something does not work due to one of these libraries, be sure to
pull updates both for the above repositories and for this notebook. If
the error persists, contact me.
#+begin_src jupyter-python :exports results :results raw drawer
  %load_ext autoreload
  %autoreload 2
#+end_src

#+RESULTS:
  
#+begin_src jupyter-python :exports results :results raw drawer
  import sys, os
  sys.path.append(os.path.expanduser("~/src/cmcl"))
  sys.path.append(os.path.expanduser("~/src/yogi"))
  sys.path.append(os.path.expanduser("~/src/spyglass"))
  # featurization
  from cmcl.data.frame import *
  from cmcl.features.categories import Categories
  from yogi.model_selection.hpo_help import summarize_HPO
  from yogi.metrics.pandas_scoring import PandasScoreAdaptor as PSA
  from yogi.metrics.pandas_scoring import batch_score
  from spyglass.model_imaging import parityplot
#+end_src

#+RESULTS:
#+begin_example
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
  [WARNING] 2022-04-16 00:33:36 - In /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/matplotlib/mpl-data/stylelib/_classic_test.mplstyle: 
  The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
#+end_example

the intel distribution provides accelerated ml algorithms
#+begin_src jupyter-python :exports results :results raw drawer
  from sklearnex import patch_sklearn
  patch_sklearn()
#+end_src

#+RESULTS:
: Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
  
#+begin_src jupyter-python :exports results :results raw drawer
  # data tools
  import sqlite3
  import pandas as pd
  import numpy as np
  # feature engineering
  from sklearn.impute import SimpleImputer
  from sklearn.preprocessing import Normalizer, StandardScaler
  # predictors
  from sklearn.ensemble import RandomForestRegressor
  ## pipeline workflow
  from sklearn.pipeline import make_pipeline as mkpipe
  from sklearn.model_selection import train_test_split as tts
  from sklearn.model_selection import GridSearchCV as gsCV
  from sklearn.model_selection import validation_curve
  # model eval
  from sklearn.metrics import make_scorer, mean_squared_error, r2_score, explained_variance_score, max_error
  #visualization
  from sklearn import set_config
#+end_src

#+RESULTS:

* load data
#+begin_src jupyter-python :exports results :results raw drawer
  sqlbase = """SELECT *
              FROM mannodi_base"""
  sqlref = """SELECT *
              FROM mannodi_ref_elprop"""
  sqlalmora = """SELECT *
                 FROM almora_agg"""
  with sqlite3.connect("/home/panos/src/cmcl/cmcl/db/perovskites.db") as conn:
      df = pd.read_sql(sqlbase, conn, index_col="index")
      lookup = pd.read_sql(sqlref, conn, index_col='index')
      almora = pd.read_sql(sqlalmora, conn, index_col='index')
#+end_src

#+RESULTS:

* Composition
** Clean Data and Compute Composition Vectors 
#+begin_src jupyter-python :exports results :results raw drawer
  lookup = lookup.set_index("Formula")
  df = df.set_index(["Formula", "sim_cell"], append=True)
#+end_src

#+RESULTS:

*** subset column labels
- drop formula with large lattice parameter difference between HSE and PBE (calculation to be rerun)
- large structural deformation identified by observing cubicity metric -- well outside of 5-10% spec?
#+begin_src jupyter-python :exports results :results raw drawer
  df = df.drop(index=["Rb0.375Cs0.625GeBr3", "RbGeBr1.125Cl1.875", "K0.75Cs0.25GeI3", "K8Sn8I9Cl15"], level=1)
  maincomp = df.ft.comp().iloc[:, :14:]
  empcomp = df.ft.comp().loc[:, ["FA", "MA", "Cs", "Pb", "Sn", "I", "Br", "Cl"]]
#+end_src

#+RESULTS:

*** auto subset index
#+begin_src jupyter-python :exports results :results raw drawer
  size = df.index.isin(["2x2x2"], level="sim_cell")
  #maincomp
  maincomp = maincomp.collect.abx()
  mcg = maincomp.groupby(level=0, axis=1).sum()
  mvB, mvX, mvA, = mcg.A.isin([1, 8]), mcg.B.isin([1, 8]), mcg.X.isin([3, 24])
  #emcomp
  empcomp = empcomp.collect.abx()
  ecg = empcomp.groupby(level=0, axis=1).sum()
  evB, evX, evA, = ecg.A.isin([1, 8]), ecg.B.isin([1, 8]), ecg.X.isin([3, 24])
  #subset indexes
  mfocus = size*mvB*mvA*mvX
  efocus = size*evB*evA*evX
#+end_src

#+RESULTS:
: [INFO] 2022-04-16 00:38:09 - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
: [INFO] 2022-04-16 00:38:09 - NumExpr defaulting to 8 threads.
: /opt/miniconda3/envs/aikit/lib/python3.9/site-packages/pandas/core/computation/expressions.py:204: UserWarning: evaluating in Python space because the '*' operator is not supported by numexpr for the bool dtype, use '&' instead
:   warnings.warn(

*** apply subsets
#+begin_src jupyter-python :exports results :results raw drawer
  mc = maincomp[mfocus]
  ec = empcomp[efocus]
  my = df[mfocus]
  ey = df[efocus] #only 56 compounds
#+end_src

#+RESULTS:

* KDE
composition vectors are central to the feature sets currently under
investigation.

Here, their univariate distributions are explored by Kernel Density
Estimation with respect to alloy class.

#+begin_src jupyter-python :exports results :results raw drawer
  plotcomp = df.ft.comp().loc[:498:].dropna(how="all", axis=1)
  comp_kde = pd.melt(
      pd.DataFrame(
          plotcomp.fillna(0).pipe(Normalizer(norm="l1").fit_transform),
          columns=plotcomp.columns,
          index=plotcomp.index).assign(mix=mix),
      id_vars="mix")
#+end_src

#+begin_src jupyter-python :exports results :results raw drawer
  with sns.plotting_context("poster"):
      p = sns.FacetGrid(comp_kde[comp_kde.mix!="BandX"], col="variable", col_order=["Ba", "Ge", "Cl", "Br", "I", "Sn", "Pb", "Cs", "FA", "MA", "Sr", "Ca", "Rb", "K"], col_wrap=5, hue="mix")
      p.map(sns.kdeplot, "value", shade=True)
      p.add_legend()
      sns.move_legend(p, "upper left", bbox_to_anchor=(.80, .25))
#+end_src

